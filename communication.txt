Program files:
Client:
	- Graphics
	- Uin -> server
	- Keep track of most recent game state
	- Listen to server for game state updates
Server:
	- Keep game objects
	- Facilitate communication between Cs and G objs
		○ Call methods of G objs
		○ Networky thing to Cs
Game(battleship.py):
	- Game logic
	- Keeps the objective boards
	- Takes player input from server
	- Sends msgs for players to server

NOTE: All message types will be determined by the first int in the bytestring
according to the following paradigm, and all messages should be sent in bytestring format.
	Server -> client messages:
		0 - denotes a flag message - '0 flag#'
		1 - denotes the results of the previous shot - '1 1'=hit '1 0' = miss
		2 - denotes the coordinates of an incoming shot - '2 x y' = enemy has fired on (x,y)

	Client -> Server messages:
		0 - denotes a flag message. - '0 flag#'
		1 - the coordinates of an outgoing shot. - '1 x y' = firing on (x,y)
		2 - the coordinates and orientation of a ship placement - '2 x y v' = place vertical ship at (x,y) (h for horizontal)


Local MSG:
	1. Fire messages, [int,int], [coords], C->S
	2. Placement messages, [bool,int,int], [coords,vertical?], C->S
	3. Fire result messages (other player), [bool,int,int], [coords,hit?], S->C
	4. Flag messages, [int,int], [flag#, optional communication], S->C
	ints could probably be shorts. they just need to store up to max(N,#flags)

Socket MSG:
    - Convert local MSG into bytestrings in order to send over sockets. Booleans will become '1' for true and '0' for False.
	- Ints will be converted via str()
	- Spaces in bytestrings seperates items in array
	- For instance, a fire local fire message [1,7] will become '1 7' for sockey communication

Flags:
    flags are a type of S->C communication of a game event. they take the form of [flag#,optional2ndNumber]. The flag#
    is the code of the event. Sometimes an event will have a 2nd number associated with it in which case the opt2ndNum
    will be used. If it is not in use it wll default to -1
FLAGS = {'bad input': 0,
				 'wait your turn': 1,
				'waiting for other player to place ships': 2,
				 'not a valid ship placement': 3,
				 'other player ready': 4,
				 'placed a ship' : 5, #2nd num = # ships left
				'repeated fire' : 6,
				 'game over' : 7,  #2nd num = player# is winner
				 'fire result' : 8} #2nd num -> bool = hit?
